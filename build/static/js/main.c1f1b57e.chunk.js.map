{"version":3,"sources":["actions/constants.js","urlConfig.js","reducers/auth.reducers.js","reducers/user.reducer.js","reducers/product.reducer.js","reducers/category.reducer.js","reducers/order.reducer.js","reducers/page.reducer.js","reducers/notifications.reducers.js","reducers/index.js","store/index.js","helpers/axios.js","actions/category.action.js","actions/initialData.action.js","actions/product.action.js","components/Header/index.js","actions/auth.actions.js","components/Layout/index.js","components/UI/Card/index.js","containers/Home/index.js","components/UI/Input/index.js","containers/Signin/index.js","containers/Signup/index.js","actions/user.actions.js","components/HOC/PrivateRoute.js","components/UI/Modal/index.js","containers/Products/index.js","containers/Orders/index.js","actions/order.action.js","containers/Category/components/UpdateCategoriesModal.js","containers/Category/components/AddCategoryModal.js","containers/Category/index.js","helpers/linearCategories.js","containers/NewPage/index.js","actions/page.action.js","App.js","index.js"],"names":["authConstants","userContants","notificationContants","categoryConstansts","productConstants","pageConstants","orderConstants","baseUrl","api","initState","token","user","firstName","lastName","email","picture","authenticate","authenticating","loading","error","message","initialState","products","categories","buildNewCategories","parentId","category","myCategories","undefined","_id","name","slug","type","children","cat","newCategory","push","length","orders","page","notifications","rootReducer","combineReducers","auth","state","action","console","log","payload","updatedCategories","product","order","notification","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","localStorage","getItem","axiosIntance","axios","create","baseURL","headers","interceptors","request","use","req","getState","Authorization","response","res","status","clear","dispatch","Promise","reject","getAllCategory","a","get","categoryList","data","getAllNotifications","id","getProducts","post","Header","props","useSelector","useDispatch","logout","Navbar","collapseOnSelect","fixed","expand","bg","variant","style","zIndex","Container","fluid","to","className","Toggle","aria-controls","Collapse","Nav","onClick","Layout","sidebar","Row","Col","md","exact","marginLeft","paddingTop","Card","headerLeft","headerRight","Home","deleteNotification","delNotification","map","index","margin","color","key","priority","text","Input","input","Form","Group","label","Label","value","onChange","placeholder","options","option","Control","Text","errorMessage","Signin","useState","setEmail","password","setPassword","marginTop","span","offset","onSubmit","e","preventDefault","setItem","JSON","stringify","login","target","Button","Signup","setFirstName","setLastName","useEffect","signup","PrivateRoute","Component","component","rest","NewModal","Modal","size","show","onHide","handleClose","closeButton","Title","modalTitle","Body","Footer","buttons","btn","backgroundColor","Products","setName","author","setAuthor","quantity","setQuantity","price","setPrice","description","setDescription","categoryId","setCategoryId","productPictures","setProductPictures","setShow","productDetailModal","setProductDetailModal","productDetails","setProductDetails","submitProductForm","form","FormData","append","pic","addProduct","then","handleProductPictures","files","handleCloseProductDetailsModal","showProductDetailsModal","display","justifyContent","Table","fontSize","responsive","productId","delete","deleteProductById","createCategoryList","src","fileName","img","alt","Orders","setType","onOrderUpdate","orderId","updateOrder","orderItem","padding","alignItems","items","item","totalAmount","paymentType","paymentStatus","boxSizing","orderStatus","isCompleted","date","d","Date","getFullYear","getMonth","getDate","formatDate","UpdateCategoriesModal","expandedArray","checkedArray","handleCategoryInput","AddCategoryModal","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","Category","checked","setChecked","expanded","setExpanded","setCheckedArray","setExpandedArray","updateCategoryModal","setUpdateCategoryModal","deleteCategoryModal","setDeleteCategoryModal","updateCheckedAndExpandedCategories","forEach","find","_index","deleteCategories","ids","checkedIdsArray","concat","result","nodes","renderCategories","onCheck","onExpand","icons","check","uncheck","halfCheck","expandClose","expandOpen","alert","addCategory","updateCategories","updatedCheckedArray","updatedExpandedArray","linearCategories","NewPage","createModal","setCreateModal","title","setTitle","setCategories","desc","setDesc","banners","setBanners","setProducts","onCategoryChange","handleBannerImages","handleProductImages","submitPageForm","banner","createPage","App","parse","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1f1b57e.chunk.js","sourcesContent":["export const authConstants = {\n  LOGIN_REQUEST: \"LOGIN_REQUEST\",\n  LOGIN_FAILURE: \"LOGIN_FAILURE\",\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\n  LOGOUT_REQUEST: \"LOGOUT_REQUEST\",\n  LOGOUT_SUCCESS: \"LOGOUT_SUCCESS\",\n  LOGOUT_FAILURE: \"LOGOUT_FAILURE\",\n};\n\nexport const userContants = {\n  USER_REGISTER_REQUEST: \"USER_REGISTER_REQUEST\",\n  USER_REGISTER_SUCCESS: \"USER_REGISTER_SUCCESS\",\n  USER_REGISTER_FAILURE: \"USER_REGISTER_FAILURE\",\n};\nexport const notificationContants = {\n  GET_NOTIFICATIONS_REQUEST: \"GET_NOTIFICATIONS_REQUEST\",\n  GET_NOTIFICATIONS_SUCCESS: \"GET_NOTIFICATIONS_SUCCESS\",\n  GET_NOTIFICATIONS_FAILURE: \"GET_NOTIFICATIONS_FAILURE\",\n\n  DEL_NOTIFICATIONS_REQUEST: \"DEL_NOTIFICATIONS_REQUEST\",\n  DEL_NOTIFICATIONS_SUCCESS: \"DEL_NOTIFICATIONS_SUCCESS\",\n  DEL_NOTIFICATIONS_FAILURE: \"DEL_NOTIFICATIONS_FAILURE\",\n};\n\nexport const categoryConstansts = {\n  GET_ALL_CATEGORIES_REQUEST: \"GET_ALL_CATEGORIES_REQUEST\",\n  GET_ALL_CATEGORIES_SUCCESS: \"GET_ALL_CATEGORIES_SUCCESS\",\n  GET_ALL_CATEGORIES_FAILURE: \"GET_ALL_CATEGORIES_FAILURE\",\n  ADD_NEW_CATEGORY_REQUEST: \"ADD_NEW_CATEGORY_REQUEST\",\n  ADD_NEW_CATEGORY_SUCCESS: \"ADD_NEW_CATEGORY_SUCCESS\",\n  ADD_NEW_CATEGORY_FAILURE: \"ADD_NEW_CATEGORY_FAILURE\",\n  UPDATE_CATEGORIES_REQUEST: \"UPDATE_CATEGORIES_REQUEST\",\n  UPDATE_CATEGORIES_SUCCESS: \"UPDATE_CATEGORIES_SUCCESS\",\n  UPDATE_CATEGORIES_FAILURE: \"UPDATE_CATEGORIES_FAILURE\",\n  DELETE_CATEGORIES_REQUEST: \"DELETE_CATEGORIES_REQUEST\",\n  DELETE_CATEGORIES_SUCCESS: \"DELETE_CATEGORIES_SUCCESS\",\n  DELETE_CATEGORIES_FAILURE: \"DELETE_CATEGORIES_FAILURE\",\n};\n\nexport const productConstants = {\n  GET_ALL_PRODUCTS_REQUEST: \"GET_ALL_PRODUCTS_REQUEST\",\n  GET_ALL_PRODUCTS_SUCCESS: \"GET_ALL_PRODUCTS_SUCCESS\",\n  GET_ALL_PRODUCTS_FAILURE: \"GET_ALL_PRODUCTS_FAILURE\",\n\n  DELETE_PRODUCT_BY_ID_REQUEST: \"DELETE_PRODUCT_BY_ID_REQUEST\",\n  DELETE_PRODUCT_BY_ID_SUCCESS: \"DELETE_PRODUCT_BY_ID_SUCCESS\",\n  DELETE_PRODUCT_BY_ID_FAILURE: \"DELETE_PRODUCT_BY_ID_FAILURE\",\n\n  ADD_PRODUCT_REQUEST: \"ADD_PRODUCT_REQUEST\",\n  ADD_PRODUCT_SUCCESS: \"ADD_PRODUCT_REQUEST\",\n  ADD_PRODUCT_FAILURE: \"ADD_PRODUCT_FAILURE\",\n};\n\nexport const initialDataConstants = {\n  GET_ALL_INITIAL_DATA_REQUEST: \"GET_ALL_INITIAL_DATA_REQUEST\",\n  GET_ALL_INITIAL_DATA_SUCCESS: \"GET_ALL_INITIAL_DATA_SUCCESS\",\n  GET_ALL_INITIAL_DATA_FAILURE: \"GET_ALL_INITIAL_DATA_FAILURE\",\n};\n\nexport const pageConstants = {\n  CREATE_PAGE_REQUEST: \"CREATE_PAGE_REQUEST\",\n  CREATE_PAGE_SUCCESS: \"CREATE_PAGE_SUCCESS\",\n  CREATE_PAGE_FAILURE: \"CREATE_PAGE_FAILURE\",\n};\n\nexport const orderConstants = {\n  GET_CUSTOMER_ORDER_REQUEST: \"GET_CUSTOMER_ORDER_REQUEST\",\n  GET_CUSTOMER_ORDER_SUCCESS: \"GET_CUSTOMER_ORDER_SUCCESS\",\n  GET_CUSTOMER_ORDER_FAILURE: \"GET_CUSTOMER_ORDER_FAILURE\",\n\n  UPDATE_CUSTOMER_ORDER_REQUEST: \"UPDATE_CUSTOMER_ORDER_REQUEST\",\n  UPDATE_CUSTOMER_ORDER_SUCCESS: \"UPDATE_CUSTOMER_ORDER_SUCCESS\",\n  UPDATE_CUSTOMER_ORDER_FAILURE: \"UPDATE_CUSTOMER_ORDER_FAILURE\",\n};\n","// const baseUrl = \"http://localhost:2000\" ;\nconst baseUrl=\"https://youshopweshipbackend.herokuapp.com\";\n\nexport const api = `${baseUrl}/api`;\n\n\nexport const generatePublicUrl = (fileName) => {\n  return `${baseUrl}/public/${fileName}`;\n};\n","import { authConstants } from \"../actions/constants\";\n\nconst initState = {\n    token: null,\n    user: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        picture: ''\n    },\n    authenticate: false,\n    authenticating: false,\n    loading: false,\n    error: null,\n    message: ''\n};\n\nexport default (state = initState, action) => {\n\n    console.log(action);\n\n    switch (action.type) {\n        case authConstants.LOGIN_REQUEST:\n            state = {\n                ...state,\n                authenticating: true\n            }\n            break;\n        case authConstants.LOGIN_SUCCESS:\n            state = {\n                ...state,\n                user: action.payload.user,\n                token: action.payload.token,\n                authenticate: true,\n                authenticating: false\n            }\n            break;\n        case authConstants.LOGOUT_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case authConstants.LOGOUT_SUCCESS:\n            state = {\n                ...initState\n            }\n            break;\n        case authConstants.LOGOUT_FAILURE:\n            state = {\n                ...state,\n                error: action.payload.error,\n                loading: false\n            }\n            break;\n\n    }\n\n\n    return state;\n}","import { userContants } from \"../actions/constants\"\n\nconst initState = {\n    error: null,\n    message: '',\n    loading: false\n}\n\nexport default (state = initState, action) => {\n    switch(action.type){\n        case userContants.USER_REGISTER_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case userContants.USER_REGISTER_SUCCESS:\n            state = {\n                ...state,\n                loading: false,\n                message: action.payload.message\n            }\n            break;\n        case userContants.USER_REGISTER_FAILURE:\n            state = {\n                ...state,\n                loading: false,\n                error: action.payload.error\n            }\n            break;\n    }\n\n    return state;\n}","import { productConstants } from \"../actions/constants\";\n\nconst initialState = {\n    products: []\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case productConstants.GET_ALL_PRODUCTS_SUCCESS:\n            state = {\n                ...state,\n                products: action.payload.products\n            }\n            break;\n    }\n\n    return state;\n}","import { categoryConstansts } from \"../actions/constants\";\n\nconst initState = {\n    categories: [],\n    loading: false,\n    error: null\n};\n\n\nconst buildNewCategories = (parentId, categories, category) => {\n    let myCategories = [];\n\n    if(parentId == undefined){\n        return [\n            ...categories,\n            {\n                _id: category._id,\n                name: category.name,\n                slug: category.slug,\n                type: category.type,\n                children: []\n            }\n        ];\n    }\n    \n    for(let cat of categories){\n\n        if(cat._id == parentId){\n            const newCategory = {\n                _id: category._id,\n                name: category.name,\n                slug: category.slug,\n                parentId: category.parentId,\n                type: category.type,\n                children: []\n            };\n            myCategories.push({\n                ...cat,\n                children: cat.children.length > 0 ? [...cat.children, newCategory] : [newCategory]\n            })\n        }else{\n            myCategories.push({\n                ...cat,\n                children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\n            });\n        }\n\n        \n    }\n\n\n    return myCategories;\n}\n\n\nexport default (state = initState, action) => {\n    switch(action.type){\n        case categoryConstansts.GET_ALL_CATEGORIES_SUCCESS:\n            state = {\n                ...state,\n                categories: action.payload.categories\n            }\n            break;\n        case categoryConstansts.ADD_NEW_CATEGORY_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case categoryConstansts.ADD_NEW_CATEGORY_SUCCESS:\n            const category = action.payload.category;\n            const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\n            console.log('updated categoires', updatedCategories);\n            \n            state = {\n                ...state,\n                categories: updatedCategories,\n                loading: false,\n            }\n            break;\n        case categoryConstansts.ADD_NEW_CATEGORY_FAILURE:\n            state = {\n                ...initState,\n                loading: false,\n                error: action.payload.error\n            }\n            break;\n        case categoryConstansts.UPDATE_CATEGORIES_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case categoryConstansts.UPDATE_CATEGORIES_SUCCESS:\n            state = {\n                ...state,\n                loading: false\n            }\n            break;\n        case categoryConstansts.UPDATE_CATEGORIES_FAILURE:\n            state = {\n                ...state,\n                error: action.payload.error,\n                loading: false\n            }\n            break;\n        case categoryConstansts.DELETE_CATEGORIES_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case categoryConstansts.DELETE_CATEGORIES_SUCCESS:\n            state = {\n                ...state,\n                loading: false\n            }\n            break;\n        case categoryConstansts.DELETE_CATEGORIES_FAILURE:\n            state = {\n                ...state,\n                loading: false,\n                error: action.payload.error\n            }\n            break;\n\n            \n    }\n\n    return state;\n}","import { orderConstants } from \"../actions/constants\";\n\nconst initState = {\n  orders: [],\n};\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case orderConstants.GET_CUSTOMER_ORDER_SUCCESS:\n      state = {\n        ...state,\n        orders: action.payload.orders,\n      }\n      break;\n\n\n\n  }\n\n  return state;\n};\n","import { pageConstants } from \"../actions/constants\"\n\nconst initState = {\n    error: null,\n    loading: false,\n    page: {}\n}\n\nexport default (state = initState, action) => {\n    switch (action.type) {\n        case pageConstants.CREATE_PAGE_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case pageConstants.CREATE_PAGE_SUCCESS:\n            state = {\n                ...state,\n                loading: false\n            }\n            break;\n        case pageConstants.CREATE_PAGE_FAILURE:\n            state = {\n                ...state,\n                loading: false,\n                error: action.payload.error\n            }\n            break;\n    }\n\n    return state;\n}","import { notificationContants } from \"../actions/constants\";\nconst initState = {\n    notifications: [],\n    loading: false,\n    error: null\n};\nexport default (state = initState, action) => {\n    switch (action.type) {\n        case notificationContants.GET_NOTIFICATIONS_SUCCESS:\n            state = {\n                ...state,\n                notifications: action.payload.notifications\n            }\n            break;\n        case notificationContants.GET_NOTIFICATIONS_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case notificationContants.GET_NOTIFICATIONS_FAILURE:\n            state = {\n                ...state,\n                error:action.payload.error\n            }\n            break;\n    }\n    return state;\n}\n","import authReducer from './auth.reducers';\nimport userReducer from './user.reducer';\nimport productReducer from './product.reducer';\nimport categoryReducer from './category.reducer';\nimport orderReducer from './order.reducer';\nimport pageReducer from './page.reducer';\nimport notificationReducer from './notifications.reducers'\nimport { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    user: userReducer,\n    category: categoryReducer,\n    product: productReducer,\n    order: orderReducer,\n    notification:notificationReducer,\n    page: pageReducer\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, composeWithDevTools(\n    applyMiddleware(thunk)\n));\n\nexport default store;","import axios from 'axios';\nimport { api } from '../urlConfig';\nimport store from '../store';\nimport { authConstants } from '../actions/constants';\n\nconst token = window.localStorage.getItem('token');\n\nconst axiosIntance = axios.create({\n    baseURL: api,\n    headers: {\n        'Authorization': token ? `Bearer ${token}` : ''\n    }\n});\n\naxiosIntance.interceptors.request.use((req) => {\n    const { auth } = store.getState();\n    if(auth.token){\n        req.headers.Authorization = `Bearer ${auth.token}`;\n    }\n    return req;\n})\n\naxiosIntance.interceptors.response.use((res) => {\n    return res;\n}, (error) => {\n    console.log(error.response);\n    const status = error.response ? error.response.status : 500;\n    if(status && status === 500){\n        localStorage.clear();\n        store.dispatch({ type: authConstants.LOGOUT_SUCCESS });\n    }\n    return Promise.reject(error);\n})\n\nexport default axiosIntance;","import axios from \"../helpers/axios\";\nimport { categoryConstansts } from \"./constants\";\n\nconst getAllCategory = () => {\n    return async dispatch => {\n\n        dispatch({ type: categoryConstansts.GET_ALL_CATEGORIES_REQUEST });\n        const res = await axios.get(`category/getcategory`);\n        if (res.status === 200) {\n\n            const { categoryList } = res.data;\n\n            dispatch({\n                type: categoryConstansts.GET_ALL_CATEGORIES_SUCCESS,\n                payload: { categories: categoryList }\n            });\n        } else {\n            dispatch({\n                type: categoryConstansts.GET_ALL_CATEGORIES_FAILURE,\n                payload: { error: res.data.error }\n            });\n        }\n\n\n    }\n}\n\nexport const addCategory = (form) => {\n    return async dispatch => {\n        dispatch({ type: categoryConstansts.ADD_NEW_CATEGORY_REQUEST });\n        try {\n            const res = await axios.post(`/category/create`, form);\n            if (res.status === 201) {\n                dispatch({\n                    type: categoryConstansts.ADD_NEW_CATEGORY_SUCCESS,\n                    payload: { category: res.data.category }\n                });\n            } else {\n                dispatch({\n                    type: categoryConstansts.ADD_NEW_CATEGORY_FAILURE,\n                    payload: res.data.error\n                });\n            }\n        } catch (error) {   \n            console.log(error.response);\n        }\n\n    }\n}\n\nexport const updateCategories = (form) => {\n    return async dispatch => {\n        dispatch({ type: categoryConstansts.UPDATE_CATEGORIES_REQUEST });\n        const res = await axios.post(`/category/update`, form);\n        if (res.status === 201) {\n            dispatch({ type: categoryConstansts.UPDATE_CATEGORIES_SUCCESS });\n            dispatch(getAllCategory());\n        } else {\n            const { error } = res.data;\n            dispatch({\n                type: categoryConstansts.UPDATE_CATEGORIES_FAILURE,\n                payload: { error }\n            });\n        }\n    }\n}\n\nexport const deleteCategories = (ids) => {\n    return async dispatch => {\n        dispatch({ type: categoryConstansts.DELETE_CATEGORIES_REQUEST });\n        const res = await axios.post(`/category/delete`, {\n            payload: {\n                ids\n            }\n        });\n        if (res.status == 201) {\n            dispatch(getAllCategory());\n            dispatch({ type: categoryConstansts.DELETE_CATEGORIES_SUCCESS });\n        } else {\n            const { error } = res.data;\n            dispatch({\n                type: categoryConstansts.DELETE_CATEGORIES_FAILURE,\n                payload: { error }\n            });\n        }\n    }\n}\n\nexport {\n    getAllCategory\n}","import {\n  categoryConstansts,\n  productConstants,\n  orderConstants,\n  notificationContants\n} from \"./constants\";\nimport axiosIntance from \"../helpers/axios\";\n\nexport const delNotification = (id) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: notificationContants.DEL_NOTIFICATIONS_REQUEST });\n      const res = await axiosIntance.post(`/deleteNotification`,{\n        data:id\n      });\n      if (res.status === 200) {\n        dispatch({ type: notificationContants.DEL_NOTIFICATIONS_SUCCESS });\n        dispatch(getAllNotifications(\"test\"));\n      } else {\n        dispatch({ type: notificationContants.DEL_NOTIFICATIONS_FAILURE });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const getAllNotifications = (id) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: notificationContants.GET_NOTIFICATIONS_REQUEST });\n      const res = await axiosIntance.get(`/getAllNotifications`,{\n        data:id\n      });\n      if (res.status === 200) {\n        dispatch({ type: notificationContants.GET_NOTIFICATIONS_SUCCESS });\n      } else {\n        dispatch({ type: notificationContants.GET_NOTIFICATIONS_FAILURE });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const getInitialData = () => {\n  return async (dispatch) => {\n    const res = await axiosIntance.post(`/initialData`);\n    if (res.status === 200) {\n      const { notifications,categories, products, orders } = res.data;\n      dispatch({\n        type:notificationContants.GET_NOTIFICATIONS_SUCCESS,\n        payload:{notifications}\n      })\n      dispatch({\n        type: categoryConstansts.GET_ALL_CATEGORIES_SUCCESS,\n        payload: { categories },\n      });\n      dispatch({\n        type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\n        payload: { products },\n      });\n      dispatch({\n        type: orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\n        payload: { orders },\n      });\n    }\n  };\n};\n","import axios from \"../helpers/axios\";\nimport { productConstants } from \"./constants\";\n\n// new action\nconst getProducts = () => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: productConstants.GET_ALL_PRODUCTS_REQUEST });\n      const res = await axios.post(`product/getProducts`);\n      if (res.status === 200) {\n        const { products } = res.data;\n        dispatch({\n          type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\n          payload: { products },\n        });\n      } else {\n        dispatch({ type: productConstants.GET_ALL_PRODUCTS_FAILURE });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n// modified actrion\nexport const addProduct = (form) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: productConstants.ADD_PRODUCT_REQUEST });\n      const res = await axios.post(`product/create`, form);\n      if (res.status === 201) {\n        dispatch({ type: productConstants.ADD_PRODUCT_SUCCESS });\n        dispatch(getProducts());\n      } else {\n        dispatch({ type: productConstants.ADD_PRODUCT_FAILURE });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n// new action\nexport const deleteProductById = (payload) => {\n  return async (dispatch) => {\n    try {\n      const res = await axios.delete(`product/deleteProductById`, {\n        data: { payload },\n      });\n      dispatch({ type: productConstants.DELETE_PRODUCT_BY_ID_REQUEST });\n      if (res.status === 202) {\n        dispatch({ type: productConstants.DELETE_PRODUCT_BY_ID_SUCCESS });\n        dispatch(getProducts());\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: productConstants.DELETE_PRODUCT_BY_ID_FAILURE,\n          payload: {\n            error,\n          },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","import React from \"react\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { signout } from \"../../actions\";\n\n/**\n * @author\n * @function Header\n **/\n\nconst Header = (props) => {\n  const auth = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  const logout = () => {\n    dispatch(signout());\n  };\n\n  const renderLoggedInLinks = () => {\n    return (\n      <Nav>\n        <li className=\"nav-item\">\n          <span className=\"nav-link\" onClick={logout}>\n            Signout\n          </span>\n        </li>\n      </Nav>\n    );\n  };\n\n  const renderNonLoggedInLinks = () => {\n    return (\n      <Nav>\n        <li className=\"nav-item\">\n          <NavLink to=\"signin\" className=\"nav-link\">\n            Signin\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink to=\"signup\" className=\"nav-link\">\n            Signup\n          </NavLink>\n        </li>\n      </Nav>\n    );\n  };\n\n  return (\n    <Navbar\n      collapseOnSelect\n      fixed=\"top\"\n      expand=\"lg\"\n      bg=\"dark\"\n      variant=\"dark\"\n      style={{ zIndex: 1 }}\n    >\n      <Container fluid>\n        {/* <Navbar.Brand href=\"#home\">Admin Dashboard</Navbar.Brand> */}\n        <Link to=\"/\" className=\"navbar-brand\">\n          Admin Dashboard\n        </Link>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n          </Nav>\n          {auth.authenticate ? renderLoggedInLinks() : renderNonLoggedInLinks()}\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import { authConstants } from \"./constants\";\nimport axios from \"../helpers/axios\";\n\nexport const login = (user) => {\n\n    return async (dispatch) => {\n\n        dispatch({ type: authConstants.LOGIN_REQUEST });\n        const res = await axios.post(`/admin/signin`, {\n            ...user\n        });\n\n        if(res.status === 200){\n            const { token, user } = res.data;\n            localStorage.setItem('token', token);\n            localStorage.setItem('user', JSON.stringify(user));\n            dispatch({\n                type: authConstants.LOGIN_SUCCESS,\n                payload: {\n                    token, user\n                }\n            });\n        }else{\n            if(res.status === 400){\n                dispatch({\n                    type: authConstants.LOGIN_FAILURE,\n                    payload: { error: res.data.error }\n                });\n            }\n        }\n    }\n}\n\nexport const isUserLoggedIn = () => {\n    return async dispatch => {\n        const token = localStorage.getItem('token');\n        if(token){\n            const user = JSON.parse(localStorage.getItem('user'));\n            dispatch({\n                type: authConstants.LOGIN_SUCCESS,\n                payload: {\n                    token, user\n                }\n            });\n        }else{\n            dispatch({\n                type: authConstants.LOGIN_FAILURE,\n                payload: { error: 'Failed to login' }\n            });\n        }\n    }\n}\n\nexport const signout = () => {\n    return async dispatch => {\n\n        dispatch({ type: authConstants.LOGOUT_REQUEST });\n        const res = await axios.post(`/admin/signout`);\n\n        if(res.status === 200){\n            localStorage.clear();\n            dispatch({ type: authConstants.LOGOUT_SUCCESS });\n        }else{\n            dispatch({\n                type: authConstants.LOGOUT_FAILURE,\n                payload: { error: res.data.error }\n            });\n        }\n\n        \n    }\n}","import React from 'react';\nimport Header from '../Header';\nimport { Container, Row, Col } from 'react-bootstrap'; \nimport { NavLink } from 'react-router-dom';\nimport './style.css';\n\n/**\n* @author\n* @function Layout\n**/\n\nconst Layout = (props) => {\n  return(\n    <>\n       <Header />\n       {\n         props.sidebar ?\n         <Container fluid>\n          <Row>\n            <Col md={2} className=\"sidebar\">\n              <ul>\n                <li><NavLink exact to={`/`}>Home</NavLink></li>\n                <li><NavLink to={`/page`}>Page</NavLink></li>\n                <li><NavLink to={`/category`}>Category</NavLink></li>\n                <li><NavLink to={`/products`}>Products</NavLink></li>\n                <li><NavLink to={`/orders`}>Orders</NavLink></li>\n              </ul>\n            </Col>\n            <Col md={10} style={{ marginLeft: 'auto', paddingTop: '60px' }}>\n              {props.children}\n            </Col>\n          </Row>\n        </Container>\n        :\n        props.children\n       }\n        \n        \n    </>\n   )\n\n }\n\nexport default Layout;","import React from \"react\";\nimport \"./style.css\";\n\n/**\n * @author\n * @function Card\n **/\n\nconst Card = (props) => {\n  return (\n    <div className=\"card\" {...props}>\n      {(props.headerLeft || props.headerRight) && (\n        <div className=\"cardHeader\">\n          {props.headerLeft && <div>{props.headerLeft}</div>}\n          {props.headerRight && <div>{props.headerRight}</div>}\n        </div>\n      )}\n\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Layout from '../../components/Layout';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Card from \"../../components/UI/Card\";\n\n\nimport './style.css';\nimport { delNotification } from '../../actions';\n\n/**\n* @author\n* @function Home\n**/\n\nconst Home = (props) => {\n  const notification = useSelector((state) => state.notification);\n  const dispatch = useDispatch();\n  const deleteNotification=(id)=>{\n    dispatch(delNotification(id))\n\n  }\n\n\n  return (\n    <Layout sidebar>\n      {notification.notifications.map((notification, index) => (\n        <Card\n          style={{\n            margin: \"10px 0\",\n            color: \"red\"\n          }}\n          key={index}\n          headerRight={notification.priority}\n        >\n          <div\n            style={{\n              margin: \"10px\",\n              color: \"black\"\n            }}\n          >\n            {notification.text}\n\n          </div>\n          <button onClick={() => {deleteNotification(notification._id)}}>\n            Delete\n           </button>\n        </Card>\n      ))}\n    </Layout>\n  )\n\n}\n\nexport default Home","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\n/**\n* @author\n* @function Input\n**/\n\nconst Input = (props) => {\n\n  let input = null;\n  switch(props.type){\n    case 'select':\n      input = <Form.Group>\n                {props.label && <Form.Label>{props.label}</Form.Label>}\n                <select\n                  className=\"form-control form-control-sm\"\n                  value={props.value}\n                  onChange={props.onChange}\n                >\n                  <option value=\"\">{props.placeholder}</option>\n                  {\n                    props.options.length > 0 ?\n                    props.options.map((option, index) =>\n                      <option key={index} value={option.value}>{option.name}</option>\n                    ) : null\n                  }\n                </select>\n            </Form.Group>\n      break;\n    case 'text':\n    default:\n      input = <Form.Group>\n                {props.label && <Form.Label>{props.label}</Form.Label>}\n                <Form.Control \n                    type={props.type} \n                    placeholder={props.placeholder} \n                    value={props.value}\n                    onChange={props.onChange}\n                    {...props}\n                />\n                <Form.Text className=\"text-muted\">\n                  {props.errorMessage}\n                </Form.Text>\n            </Form.Group>\n  }\n\n\n  return input;\n\n }\n\nexport default Input","import React, { useState } from 'react';\nimport Layout from '../../components/Layout';\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\nimport Input from '../../components/UI/Input';\nimport { login } from '../../actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\n/**\n* @author\n* @function Signin\n**/\n\nconst Signin = (props) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const auth = useSelector(state => state.auth);\n\n    const dispatch = useDispatch();\n\n    \n\n\n    const userLogin = (e) => {\n\n        e.preventDefault();\n\n        const user = {\n            email, password\n        }\n\n        dispatch(login(user));\n    }\n\n    if(auth.authenticate){\n        return <Redirect to={`/`} />\n    }\n\n    return (\n        <Layout>\n            <Container>\n                <Row style={{ marginTop: '50px' }}>\n                    <Col md={{span: 6, offset: 3}}>\n                        <Form onSubmit={userLogin}>\n                            <Input \n                                label=\"Email\"\n                                placeholder=\"Email\"\n                                value={email}\n                                type=\"email\"\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n\n                            <Input \n                                label=\"Password\"\n                                placeholder=\"Password\"\n                                value={password}\n                                type=\"password\"\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                            <Button variant=\"primary\" type=\"submit\">\n                                Submit\n                            </Button>\n                        </Form>\n                    </Col>\n                </Row>\n                \n            </Container>\n        </Layout>\n    )\n\n}\n\nexport default Signin","import React, { useState } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Container, Form, Row, Col, Button } from \"react-bootstrap\";\nimport Input from \"../../components/UI/Input\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { signup } from \"../../actions\";\nimport { useEffect } from \"react\";\n\n/**\n * @author\n * @function Signup\n **/\n\nconst Signup = (props) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const auth = useSelector((state) => state.auth);\n  const user = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!user.loading) {\n      setFirstName(\"\");\n      setLastName(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n    }\n  }, [user.loading]);\n\n  const userSignup = (e) => {\n    e.preventDefault();\n\n    const user = {\n      firstName,\n      lastName,\n      email,\n      password,\n    };\n\n    dispatch(signup(user));\n  };\n\n  if (auth.authenticate) {\n    return <Redirect to={`/`} />;\n  }\n\n  if (user.loading) {\n    return <p>Loading...!</p>;\n  }\n\n  return (\n    <Layout>\n      <Container>\n        {user.message}\n        <Row style={{ marginTop: \"50px\" }}>\n          <Col md={{ span: 6, offset: 3 }}>\n            <Form onSubmit={userSignup}>\n              <Row>\n                <Col md={6}>\n                  <Input\n                    label=\"First Name\"\n                    placeholder=\"First Name\"\n                    value={firstName}\n                    type=\"text\"\n                    onChange={(e) => setFirstName(e.target.value)}\n                  />\n                </Col>\n                <Col md={6}>\n                  <Input\n                    label=\"Last Name\"\n                    placeholder=\"Last Name\"\n                    value={lastName}\n                    type=\"text\"\n                    onChange={(e) => setLastName(e.target.value)}\n                  />\n                </Col>\n              </Row>\n\n              <Input\n                label=\"Email\"\n                placeholder=\"Email\"\n                value={email}\n                type=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n\n              <Input\n                label=\"Password\"\n                placeholder=\"Password\"\n                value={password}\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Signup;\n","import {  userContants } from \"./constants\";\nimport axios from \"../helpers/axios\";\n\nexport const signup = (user) => {\n\n\n    return async (dispatch) => {\n\n        dispatch({ type: userContants.USER_REGISTER_REQUEST });\n        const res = await axios.post(`/admin/signup`, {\n            ...user\n        });\n\n        if(res.status === 201){\n            const { message } = res.data;\n            dispatch({\n                type: userContants.USER_REGISTER_SUCCESS,\n                payload: {message}\n            });\n        }else{\n            if(res.status === 400){\n                dispatch({\n                    type: userContants.USER_REGISTER_FAILURE,\n                    payload: { error: res.data.error }\n                });\n            }\n        }\n    }\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    return <Route {...rest} component={(props) => {\n        const token = window.localStorage.getItem('token');\n        if(token){\n            return <Component {...props} />\n        }else{\n            return <Redirect to={`/signin`} />\n        }\n    }} />\n}\n\nexport default PrivateRoute;","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\n/**\n * @author\n * @function Modal\n **/\n\nconst NewModal = (props) => {\n  return (\n    <Modal size={props.size} show={props.show} onHide={props.handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.modalTitle}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{props.children}</Modal.Body>\n      <Modal.Footer>\n        {props.buttons ? (\n          props.buttons.map((btn, index) => (\n            <Button key={index} variant={btn.color} onClick={btn.onClick}>\n              {btn.label}\n            </Button>\n          ))\n        ) : (\n          <Button\n            variant=\"primary\"\n            {...props}\n            style={{ backgroundColor: \"#333\" }}\n            className=\"btn-sm\"\n            onClick={props.onSubmit}\n          >\n            Save\n          </Button>\n        )}\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default NewModal;\n","import React, { useState } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Container, Row, Col, Table } from \"react-bootstrap\";\nimport Input from \"../../components/UI/Input\";\nimport Modal from \"../../components/UI/Modal\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addProduct, deleteProductById } from \"../../actions\";\nimport \"./style.css\";\nimport { generatePublicUrl } from \"../../urlConfig\";\n\n/**\n * @author\n * @function Products\n **/\n\nconst Products = (props) => {\n  const [name, setName] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [categoryId, setCategoryId] = useState(\"\");\n  const [productPictures, setProductPictures] = useState([]);\n  const [show, setShow] = useState(false);\n  const [productDetailModal, setProductDetailModal] = useState(false);\n  const [productDetails, setProductDetails] = useState(null);\n  const category = useSelector((state) => state.category);\n  const product = useSelector((state) => state.product);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const submitProductForm = () => {\n    const form = new FormData();\n    form.append(\"name\", name);\n    form.append(\"author\",author);\n    form.append(\"quantity\", quantity);\n    form.append(\"price\", price);\n    form.append(\"description\", description);\n    form.append(\"category\", categoryId);\n\n    for (let pic of productPictures) {\n      form.append(\"productPicture\", pic);\n    }\n\n    dispatch(addProduct(form)).then(() =>{\n      setShow(false);\n      setName('');\n      setAuthor('');\n      setDescription('');\n      setPrice('');\n      setQuantity('');\n      setProductPictures([]);\n    });\n  };\n  const handleShow = () => setShow(true);\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({ value: category._id, name: category.name });\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleProductPictures = (e) => {\n    setProductPictures([...productPictures, e.target.files[0]]);\n  };\n\n  const renderProducts = () => {\n    return (\n      <Table style={{ fontSize: 12 }} responsive=\"sm\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n            <th>Price</th>\n            <th>Quantity</th>\n            <th>Category</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {product.products.length > 0\n            ? product.products.map((product,index) => (\n                <tr key={product._id}>\n                  <td>{index+1}</td>\n                  <td>{product.name}</td>\n                  <td>{product.price}</td>\n                  <td>{product.quantity}</td>\n                  <td>{product.category.name}</td>\n                  <td>\n                    <button onClick={() => showProductDetailsModal(product)}>\n                      info\n                    </button>\n                    <button\n                      onClick={() => {\n                        const payload = {\n                          productId: product._id,\n                        };\n                        dispatch(deleteProductById(payload));\n                      }}\n                    >\n                      del\n                    </button>\n                  </td>\n                </tr>\n              ))\n            : null}\n        </tbody>\n      </Table>\n    );\n  };\n\n  const renderAddProductModal = () => {\n    return (\n      <Modal\n        show={show}\n        handleClose={handleClose}\n        modalTitle={\"Add New Product\"}\n        onSubmit={submitProductForm}\n      >\n        <Input\n          label=\"Name\"\n          value={name}\n          placeholder={`Product Name`}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <Input\n          label=\"Author\"\n          value={author}\n          placeholder={`Book Author Name`}\n          onChange={(e) => setAuthor(e.target.value)}\n        />\n        <Input\n          label=\"Quantity\"\n          value={quantity}\n          placeholder={`Quantity`}\n          onChange={(e) => setQuantity(e.target.value)}\n        />\n        <Input\n          label=\"Price\"\n          value={price}\n          placeholder={`Price`}\n          onChange={(e) => setPrice(e.target.value)}\n        />\n        <Input\n          label=\"Description\"\n          value={description}\n          placeholder={`Description`}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <select\n          className=\"form-control\"\n          value={categoryId}\n          onChange={(e) => setCategoryId(e.target.value)}\n        >\n          <option>select category</option>\n          {createCategoryList(category.categories).map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.name}\n            </option>\n          ))}\n        </select>\n        {productPictures.length > 0\n          ? productPictures.map((pic, index) => (\n              <div key={index}>{pic.name}</div>\n            ))\n          : null}\n        <input\n          type=\"file\"\n          name=\"productPicture\"\n          onChange={handleProductPictures}\n        />\n      </Modal>\n    );\n  };\n\n  const handleCloseProductDetailsModal = () => {\n    setProductDetailModal(false);\n  };\n\n  const showProductDetailsModal = (product) => {\n    setProductDetails(product);\n    setProductDetailModal(true);\n  };\n\n  const renderProductDetailsModal = () => {\n    if (!productDetails) {\n      return null;\n    }\n\n    return (\n      <Modal\n        show={productDetailModal}\n        handleClose={handleCloseProductDetailsModal}\n        modalTitle={\"Product Details\"}\n        size=\"lg\"\n      >\n        <Row>\n          <Col md=\"6\">\n            <label className=\"key\">Name</label>\n            <p className=\"value\">{productDetails.name}</p>\n          </Col>\n          <Col md=\"6\">\n            <label className=\"key\">Price</label>\n            <p className=\"value\">{productDetails.price}</p>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"6\">\n            <label className=\"key\">Quantity</label>\n            <p className=\"value\">{productDetails.quantity}</p>\n          </Col>\n          <Col md=\"6\">\n            <label className=\"key\">Category</label>\n            <p className=\"value\">{productDetails.category.name}</p>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"12\">\n            <label className=\"key\">Description</label>\n            <p className=\"value\">{productDetails.description}</p>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <label className=\"key\">Product Pictures</label>\n            <div style={{ display: \"flex\" }}>\n              {productDetails.productPictures.map((picture) => (\n                <div className=\"productImgContainer\" key={picture.name}>\n                  <img src={generatePublicUrl(picture.img)} alt={picture.name}/>\n                </div>\n              ))}\n            </div>\n          </Col>\n        </Row>\n      </Modal>\n    );\n  };\n  return (\n    <Layout sidebar>\n      <Container>\n        <Row>\n          <Col md={12}>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <h3>Products</h3>\n              <button onClick={handleShow}>Add</button>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>{renderProducts()}</Col>\n        </Row>\n      </Container>\n      {renderAddProductModal()}\n      {renderProductDetailsModal()}\n    </Layout>\n  );\n};\n\nexport default Products;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateOrder } from \"../../actions\";\nimport Layout from \"../../components/Layout\";\nimport Card from \"../../components/UI/Card\";\n\nimport \"./style.css\";\n\n/**\n * @author\n * @function Orders\n **/\n\nconst Orders = (props) => {\n  const order = useSelector((state) => state.order);\n  const [type, setType] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const onOrderUpdate = (orderId) => {\n    const payload = {\n      orderId,\n      type,\n    };\n    dispatch(updateOrder(payload));\n  };\n\n  const formatDate = (date) => {\n    if (date) {\n      const d = new Date(date);\n      return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\n    }\n    return \"\";\n  };\n\n  return (\n    <Layout sidebar>\n      {order.orders.map((orderItem, index) => (\n        <Card\n          style={{\n            margin: \"10px 0\",\n          }}\n          key={index}\n          headerLeft={orderItem._id}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              padding: \"50px 50px\",\n              alignItems: \"center\",\n            }}\n          >\n            <div>\n              <div className=\"title\">Items</div>\n              {orderItem.items.map((item, index) => (\n                <div className=\"value\" key={index}>\n                  {item.productId.name}\n                </div>\n              ))}\n            </div>\n            <div>\n              <span className=\"title\">Total Price</span>\n              <br />\n              <span className=\"value\">{orderItem.totalAmount}</span>\n            </div>\n            <div>\n              <span className=\"title\">Payment Type</span> <br />\n              <span className=\"value\">{orderItem.paymentType}</span>\n            </div>\n            <div>\n              <span className=\"title\">Payment Status</span> <br />\n              <span className=\"value\">{orderItem.paymentStatus}</span>\n            </div>\n          </div>\n          <div\n            style={{\n              boxSizing: \"border-box\",\n              padding: \"100px\",\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            <div className=\"orderTrack\">\n              {orderItem.orderStatus.map((status) => (\n                <div\n                  className={`orderStatus ${\n                    status.isCompleted ? \"active\" : \"\"\n                  }`}\n                >\n                  <div\n                    className={`point ${status.isCompleted ? \"active\" : \"\"}`}\n                  ></div>\n                  <div className=\"orderInfo\">\n                    <div className=\"status\">{status.type}</div>\n                    <div className=\"date\">{formatDate(status.date)}</div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* select input to apply order action */}\n            <div\n              style={{\n                padding: \"0 50px\",\n                boxSizing: \"border-box\",\n              }}\n            >\n              <select onChange={(e) => setType(e.target.value)}>\n                <option value={\"\"}>select status</option>\n                {orderItem.orderStatus.map((status) => {\n                  return (\n                    <>\n                      {!status.isCompleted ? (\n                        <option key={status.type} value={status.type}>\n                          {status.type}\n                        </option>\n                      ) : null}\n                    </>\n                  );\n                })}\n              </select>\n            </div>\n            {/* button to confirm action */}\n\n            <div\n              style={{\n                padding: \"0 50px\",\n                boxSizing: \"border-box\",\n              }}\n            >\n              <button onClick={() => onOrderUpdate(orderItem._id)}>\n                confirm\n              </button>\n            </div>\n          </div>\n        </Card>\n      ))}\n    </Layout>\n  );\n};\n\nexport default Orders;\n","import axios from \"../helpers/axios\";\nimport { orderConstants } from \"./constants\";\n\nexport const getCustomerOrders = () => {\n  return async (dispatch) => {\n    dispatch({ type: orderConstants.GET_CUSTOMER_ORDER_REQUEST });\n    try {\n      const res = await axios.post(\"/order/getCustomerOrders\");\n      if (res.status === 200) {\n        const { orders } = res.data;\n        dispatch({\n          type: orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\n          payload: { orders },\n        });\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: orderConstants.GET_CUSTOMER_ORDER_FAILURE,\n          payload: { error },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateOrder = (payload) => {\n  return async (dispatch) => {\n    dispatch({ type: orderConstants.UPDATE_CUSTOMER_ORDER_REQUEST });\n    try {\n      const res = await axios.post(\"/order/update\", payload);\n      if (res.status === 201) {\n        dispatch({ type: orderConstants.UPDATE_CUSTOMER_ORDER_SUCCESS });\n        dispatch(getCustomerOrders());\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: orderConstants.UPDATE_CUSTOMER_ORDER_FAILURE,\n          payload: { error },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","import React from 'react';\nimport Input from '../../../components/UI/Input';\nimport Modal from '../../../components/UI/Modal';\nimport {Row, Col} from 'react-bootstrap';\n\n\nconst UpdateCategoriesModal = (props) => {\n\n    const {\n        show,\n        handleClose,\n        modalTitle,\n        size,\n        expandedArray,\n        checkedArray,\n        handleCategoryInput,\n        categoryList,\n        onSubmit\n    } = props;\n\n    console.log({expandedArray, checkedArray})\n\n    return (\n        <Modal\n            show={show}\n            handleClose={handleClose}\n            onSubmit={onSubmit}\n            modalTitle={modalTitle}\n            size={size}\n        >\n            <Row>\n                <Col>\n                    <h6>Expanded</h6>\n                </Col>\n            </Row>\n            {\n                expandedArray.length > 0 &&\n                expandedArray.map((item, index) =>\n                    <Row key={index}>\n                        <Col>\n                            <Input\n                                value={item.name}\n                                placeholder={`Category Name`}\n                                onChange={(e) => handleCategoryInput('name', e.target.value, index, 'expanded')}\n                            />\n                        </Col>\n                        <Col>\n                            <select\n                                className=\"form-control\"\n                                value={item.parentId}\n                                onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'expanded')}>\n                                <option>select category</option>\n                                {\n                                    categoryList.map(option =>\n                                        <option key={option.value} value={option.value}>{option.name}</option>\n                                    )\n                                }\n                            </select>\n                        </Col>\n                        <Col>\n                            <select\n                                className=\"form-control\"\n                                value={item.type}\n                                onChange={(e) => handleCategoryInput('type', e.target.value, index, 'expanded')}\n                            >\n                                <option value=\"\">Select Type</option>\n                                <option value=\"store\">Store</option>\n                                <option value=\"product\">Product</option>\n                                <option value=\"page\">Page</option>\n                            </select>\n                        </Col>\n                    </Row>\n                )\n            }\n            <h6>Checked Categories</h6>\n            {\n                checkedArray.length > 0 &&\n                checkedArray.map((item, index) =>\n                    <Row key={index}>\n                        <Col>\n                            <Input\n                                value={item.name}\n                                placeholder={`Category Name`}\n                                onChange={(e) => handleCategoryInput('name', e.target.value, index, 'checked')}\n                            />\n                        </Col>\n                        <Col>\n                            <select\n                                className=\"form-control\"\n                                value={item.parentId}\n                                onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'checked')}>\n                                <option>select category</option>\n                                {\n                                    categoryList.map(option =>\n                                        <option key={option.value} value={option.value}>{option.name}</option>\n                                    )\n                                }\n                            </select>\n                        </Col>\n                        <Col>\n                            <select\n                                className=\"form-control\"\n                                value={item.type}\n                                onChange={(e) => handleCategoryInput('type', e.target.value, index, 'checked')}\n                            \n                            >\n                                <option value=\"\">Select Type</option>\n                                <option value=\"store\">Store</option>\n                                <option value=\"product\">Product</option>\n                                <option value=\"page\">Page</option>\n                            </select>\n                        </Col>\n                    </Row>\n                )\n            }\n        </Modal>\n    );\n}\n\nexport default UpdateCategoriesModal;","import React from 'react';\nimport Input from '../../../components/UI/Input';\nimport Modal from '../../../components/UI/Modal';\nimport { Row, Col } from 'react-bootstrap';\n\n\nconst AddCategoryModal = (props) => {\n\n    const {\n        show,\n        handleClose,\n        modalTitle,\n        categoryName,\n        setCategoryName,\n        parentCategoryId,\n        setParentCategoryId,\n        categoryList,\n        onSubmit\n    } = props;\n\n    return (\n        <Modal\n            show={show}\n            handleClose={handleClose}\n            onSubmit={onSubmit}\n            modalTitle={modalTitle}\n        >\n            <Row>\n                <Col>\n                    <Input\n                        value={categoryName}\n                        placeholder={`Category Name`}\n                        onChange={(e) => setCategoryName(e.target.value)}\n                        className=\"form-control-sm\"\n                    />\n                </Col>\n                <Col>\n                    <select\n                        className=\"form-control form-control-sm\"\n                        value={parentCategoryId}\n                        onChange={(e) => setParentCategoryId(e.target.value)}>\n                        <option>select category</option>\n                        {\n                            categoryList.map(option =>\n                                <option key={option.value} value={option.value}>{option.name}</option>)\n                        }\n                    </select>\n                </Col>\n            </Row>\n        </Modal>\n    );\n}\n\nexport default AddCategoryModal;","import React, { useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    getAllCategory,\n    addCategory,\n    updateCategories,\n    deleteCategories as deleteCategoriesAction\n} from '../../actions';\nimport Modal from '../../components/UI/Modal';\nimport CheckboxTree from 'react-checkbox-tree';\nimport {\n    IoIosCheckboxOutline,\n    IoIosCheckbox,\n    IoIosArrowForward,\n    IoIosArrowDown,\n    IoIosAdd,\n    IoIosTrash,\n    IoIosCloudUpload\n} from 'react-icons/io'\n\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport UpdateCategoriesModal from './components/UpdateCategoriesModal';\nimport AddCategoryModal from './components/AddCategoryModal';\nimport './style.css';\n\n/**\n* @author\n* @function Category\n**/\n\nconst Category = (props) => {\n\n    const category = useSelector(state => state.category);\n    const [categoryName, setCategoryName] = useState('');\n    const [parentCategoryId, setParentCategoryId] = useState('');\n    const [show, setShow] = useState(false);\n    const [checked, setChecked] = useState([]);\n    const [expanded, setExpanded] = useState([]);\n    const [checkedArray, setCheckedArray] = useState([]);\n    const [expandedArray, setExpandedArray] = useState([]);\n    const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n    const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        if (!category.loading) {\n            setShow(false);\n        }\n\n    }, [category.loading]);\n\n\n    const handleClose = () => {\n\n        const form = new FormData();\n\n        if (categoryName === \"\") {\n            alert('Category name is required');\n            setShow(false);\n            return;\n        }\n\n        form.append('name', categoryName);\n        form.append('parentId', parentCategoryId);\n        dispatch(addCategory(form));\n        setCategoryName('');\n        setParentCategoryId('');\n        setShow(false);\n    }\n    const handleShow = () => setShow(true);\n\n    const renderCategories = (categories) => {\n        let myCategories = [];\n        for (let category of categories) {\n            myCategories.push(\n                {\n                    label: category.name,\n                    value: category._id,\n                    children: category.children.length > 0 && renderCategories(category.children)\n                }\n            );\n        }\n        return myCategories;\n    }\n\n    const createCategoryList = (categories, options = []) => {\n\n        for (let category of categories) {\n            options.push({\n                value: category._id,\n                name: category.name,\n                parentId: category.parentId,\n                type: category.type\n            });\n            if (category.children.length > 0) {\n                createCategoryList(category.children, options)\n            }\n        }\n\n        return options;\n    }\n\n    const updateCategory = () => {\n        updateCheckedAndExpandedCategories();\n        setUpdateCategoryModal(true);\n    }\n\n    const updateCheckedAndExpandedCategories = () => {\n        const categories = createCategoryList(category.categories);\n        const checkedArray = [];\n        const expandedArray = [];\n        checked.length > 0 && checked.forEach((categoryId, index) => {\n            const category = categories.find((category, _index) => categoryId == category.value);\n            category && checkedArray.push(category);\n        })\n        expanded.length > 0 && expanded.forEach((categoryId, index) => {\n            const category = categories.find((category, _index) => categoryId == category.value);\n            category && expandedArray.push(category);\n        })\n        setCheckedArray(checkedArray);\n        setExpandedArray(expandedArray);\n    }\n\n    const handleCategoryInput = (key, value, index, type) => {\n        console.log(value);\n        if (type === \"checked\") {\n            const updatedCheckedArray = checkedArray.map((item, _index) =>\n                index === _index ? { ...item, [key]: value } : item);\n            setCheckedArray(updatedCheckedArray);\n        } else if (type === \"expanded\") {\n            const updatedExpandedArray = expandedArray.map((item, _index) =>\n                index === _index ? { ...item, [key]: value } : item);\n            setExpandedArray(updatedExpandedArray);\n        }\n    }\n\n    const updateCategoriesForm = () => {\n        const form = new FormData();\n\n        expandedArray.forEach((item, index) => {\n            form.append('_id', item.value);\n            form.append('name', item.name);\n            form.append('parentId', item.parentId ? item.parentId : \"\");\n            form.append('type', item.type);\n        });\n        checkedArray.forEach((item, index) => {\n            form.append('_id', item.value);\n            form.append('name', item.name);\n            form.append('parentId', item.parentId ? item.parentId : \"\");\n            form.append('type', item.type);\n        });\n        dispatch(updateCategories(form));\n        \n    }\n\n    const deleteCategory = () => {\n        updateCheckedAndExpandedCategories();\n        setDeleteCategoryModal(true);\n    }\n\n    const deleteCategories = () => {\n        const checkedIdsArray = checkedArray.map((item, index) => ({ _id: item.value }));\n        const expandedIdsArray = expandedArray.map((item, index) => ({ _id: item.value }));\n        const idsArray = expandedIdsArray.concat(checkedIdsArray);\n\n        if (checkedIdsArray.length > 0) {\n            dispatch(deleteCategoriesAction(checkedIdsArray))\n                .then(result => {\n                    if (result) {\n                        dispatch(getAllCategory())\n                        setDeleteCategoryModal(false)\n                    }\n                });\n        }\n\n        setDeleteCategoryModal(false);\n\n\n    }\n\n    const renderDeleteCategoryModal = () => {\n        return (\n            <Modal\n                modalTitle=\"Confirm\"\n                show={deleteCategoryModal}\n                handleClose={() => setDeleteCategoryModal(false)}\n                buttons={[\n                    {\n                        label: 'No',\n                        color: 'primary',\n                        onClick: () => {\n                            alert('no');\n                        }\n                    },\n                    {\n                        label: 'Yes',\n                        color: 'danger',\n                        onClick: deleteCategories\n                    }\n                ]}\n            >\n\n\n                <h5>Expanded</h5>\n                { expandedArray.map((item, index) => <span key={index}>{item.name}</span>)}\n                <h5>Checked</h5>\n                { checkedArray.map((item, index) => <span key={index}>{item.name}</span>)}\n\n            </Modal>\n        );\n    }\n\n    const categoryList = createCategoryList(category.categories);\n\n    return (\n        <Layout sidebar>\n            <Container>\n                <Row>\n                    <Col md={12}>\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                            <h3>Category</h3>\n                            <div className=\"actionBtnContainer\">\n                                <span>Actions: </span>\n                                <button onClick={handleShow}><IoIosAdd /> <span>Add</span></button>\n                                <button onClick={deleteCategory}><IoIosTrash /> <span>Delete</span></button>\n                                <button onClick={updateCategory}><IoIosCloudUpload /> <span>Edit</span></button>\n                            </div>\n\n                        </div>\n\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={12}>\n                        <CheckboxTree\n                            nodes={renderCategories(category.categories)}\n                            checked={checked}\n                            expanded={expanded}\n                            onCheck={checked => setChecked(checked)}\n                            onExpand={expanded => setExpanded(expanded)}\n                            icons={{\n                                check: <IoIosCheckbox />,\n                                uncheck: <IoIosCheckboxOutline />,\n                                halfCheck: <IoIosCheckboxOutline />,\n                                expandClose: <IoIosArrowForward />,\n                                expandOpen: <IoIosArrowDown />\n                            }}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n            <AddCategoryModal\n                show={show}\n                handleClose={() => setShow(false)}\n                onSubmit={handleClose}\n                modalTitle={'Add New Category'}\n                categoryName={categoryName}\n                setCategoryName={setCategoryName}\n                parentCategoryId={parentCategoryId}\n                setParentCategoryId={setParentCategoryId}\n                categoryList={categoryList}\n            />\n            <UpdateCategoriesModal\n                show={updateCategoryModal}\n                handleClose={() => setUpdateCategoryModal(false)}\n                onSubmit={updateCategoriesForm}\n                modalTitle={'Update Categories'}\n                size=\"lg\"\n                expandedArray={expandedArray}\n                checkedArray={checkedArray}\n                handleCategoryInput={handleCategoryInput}\n                categoryList={categoryList}\n            />\n            {/* {renderAddCategoryModal()} */}\n            {renderDeleteCategoryModal()}\n        </Layout>\n    )\n\n}\n\nexport default Category","const linearCategories = (categories, options = []) => {\n\n    for (let category of categories) {\n        options.push({ \n            value: category._id, \n            name: category.name, \n            parentId: category.parentId,\n            type: category.type\n        });\n        if (category.children.length > 0) {\n            linearCategories(category.children, options)\n        }\n    }\n\n    return options;\n}\n\nexport default linearCategories;","import React, { useState, useEffect } from 'react';\nimport Modal from '../../components/UI/Modal';\nimport Layout from '../../components/Layout';\nimport Input from '../../components/UI/Input';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport linearCategories from '../../helpers/linearCategories';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createPage } from '../../actions';\n\n/**\n* @author\n* @function NewPage\n**/\n\nconst NewPage = (props) => {\n\n    const [createModal, setCreateModal] = useState(false);\n    const [title, setTitle] = useState('');\n    const category = useSelector(state => state.category);\n    const [categories, setCategories] = useState([]);\n    const [categoryId, setCategoryId] = useState('');\n    const [desc, setDesc] = useState('');\n    const [type, setType] = useState('');\n    const [banners, setBanners] = useState([]);\n    const [products, setProducts] = useState([]);\n    const dispatch = useDispatch();\n    const page = useSelector(state => state.page);\n\n\n    useEffect(() => {\n        setCategories(linearCategories(category.categories));\n    }, [category]);\n\n    useEffect(() => {\n        console.log(page);\n        if(!page.loading){\n            setCreateModal(false);\n            setTitle('');\n            setCategoryId('');\n            setDesc('');\n            setProducts([]);\n            setBanners([]);\n        }\n    }, [page]);\n\n    const onCategoryChange = (e) => {\n        const category = categories.find(category => category.value === e.target.value);\n        setCategoryId(e.target.value);\n        setType(category.type);\n    }\n\n    const handleBannerImages = (e) => {\n        console.log(e);\n        setBanners([...banners, e.target.files[0]]);\n    }\n\n    const handleProductImages = (e) => {\n        console.log(e);\n        setProducts([...products, e.target.files[0]]);\n    }\n\n    const submitPageForm = (e) => {\n        //e.target.preventDefault();\n\n        if(title === \"\"){\n            alert('Title is required');\n            setCreateModal(false);\n            return;\n        }\n\n        const form = new FormData();\n        form.append('title', title);\n        form.append('description', desc);\n        form.append('category', categoryId);\n        form.append('type', type);\n        banners.forEach((banner, index) => {\n            form.append('banners', banner);\n        });\n        products.forEach((product, index) => {\n            form.append('products', product);\n        });\n\n        dispatch(createPage(form));\n\n        \n    }\n\n    const renderCreatePageModal = () => {\n        return (\n            <Modal\n                show={createModal}\n                modalTitle={'Create New Page'}\n                handleClose={() => setCreateModal(false)}\n                onSubmit={submitPageForm}\n            >\n                <Container>\n                    <Row>\n                        <Col>\n                            {/* <select\n                                className=\"form-control\"\n                                value={categoryId}\n                                onChange={onCategoryChange}\n                            >\n                                <option value=\"\">select category</option>\n                                {\n                                    categories.map(cat =>\n                                        <option key={cat._id} value={cat._id}>{cat.name}</option>\n                                    )\n                                }\n                            </select> */}\n                            <Input \n                                type=\"select\"\n                                value={categoryId}\n                                onChange={onCategoryChange}\n                                options={categories}\n                                placeholder={'Select Category'}\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <Input\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n                                placeholder={'Page Title'}\n                                className=\"\"\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <Input\n                                value={desc}\n                                onChange={(e) => setDesc(e.target.value)}\n                                placeholder={'Page Desc'}\n                                className=\"\"\n                            />\n                        </Col>\n                    </Row>\n\n                    {\n                            banners.length > 0 ? \n                            banners.map((banner, index) => \n                                <Row key={index}>\n                                    <Col>{banner.name}</Col>\n                                </Row>\n                            ) : null\n                    }\n                    <Row>\n                        <Col>\n                            <Input\n                                className=\"form-control\" \n                                type=\"file\" \n                                name=\"banners\"\n                                onChange={handleBannerImages}\n                            />\n                        </Col>\n                    </Row>\n\n                    {\n                            products.length > 0 ? \n                            products.map((product, index) => \n                                <Row key={index}>\n                                    <Col>{product.name}</Col>\n                                </Row>\n                            ) : null\n                        }\n                    <Row>\n                        <Col>\n                            <Input \n                                className=\"form-control\"\n                                type=\"file\" \n                                name=\"products\"\n                                onChange={handleProductImages}\n                            />\n                        </Col>\n                    </Row>\n\n                    \n\n                </Container>\n\n\n            </Modal>\n        );\n    }\n\n\n    return (\n        <Layout sidebar>\n            {\n                page.loading ? \n                <p>Creating Page...please wait</p>\n                :\n                <>\n                    {renderCreatePageModal()}\n                    <button onClick={() => setCreateModal(true)}>Create Page</button>\n                </>\n            }\n            \n        </Layout>\n    )\n\n}\n\nexport default NewPage","import axios from \"../helpers/axios\";\nimport { pageConstants } from \"./constants\";\n\nexport const createPage = (form) => {\n    return async dispatch => {\n        dispatch({ type: pageConstants.CREATE_PAGE_REQUEST });\n        try{\n            const res = await axios.post('/page/create', form);\n            if(res.status === 201){\n                dispatch({\n                    type: pageConstants.CREATE_PAGE_SUCCESS,\n                    payload: { page: res.data.page }\n                });\n            }else{\n                dispatch({\n                    type: pageConstants.CREATE_PAGE_FAILURE,\n                    payload: { error: res.data.error }\n                });\n            }\n        }catch(error){\n            console.log(error)\n        }\n    }\n}","import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Home from './containers/Home';\nimport Signin from './containers/Signin';\nimport Signup from './containers/Signup';\nimport PrivateRoute from './components/HOC/PrivateRoute';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isUserLoggedIn, getInitialData } from './actions';\nimport Products from './containers/Products';\nimport Orders from './containers/Orders';\nimport Category from './containers/Category';\nimport NewPage from './containers/NewPage';\n\n\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth)\n\n\n  //componentDidMount or componentDidUpdate\n  useEffect(() => {\n    if (!auth.authenticate) {\n      dispatch(isUserLoggedIn());\n    }\n    if(auth.authenticate){\n      dispatch(getInitialData());\n    }\n    \n\n  }, [auth.authenticate]);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <PrivateRoute path=\"/\" exact component={Home} />\n        <PrivateRoute path=\"/page\" component={NewPage} />\n        <PrivateRoute path=\"/category\" component={Category} />\n        <PrivateRoute path=\"/products\" component={Products} />\n        <PrivateRoute path=\"/orders\" component={Orders} />\n        \n        <Route path=\"/signin\" component={Signin} />\n        <Route path=\"/signup\" component={Signup} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nwindow.store = store;\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}